pipeline {
    agent any

    parameters {
        string(name: 'DEPLOYMENT', defaultValue: 'default-deployment', description: 'Name of the deployment to apply')
    }

    stages {
        stage('SonarQube Analysis') {
            steps {
                script {
                    // Perform SonarQube analysis
                    sh """
                    sonar-scanner \
                      -Dsonar.projectKey=test-app \
                      -Dsonar.sources=. \
                      -Dsonar.host.url=http://128.110.218.109:9000 \
                      -Dsonar.login=4d2523ba64a229d679a3d65c604394b503a76d2b 
                    """
                }
            }
        }

        stage('Deploy App') {
            steps {
                script {
                    // Apply the Kubernetes configurations
                    sh """
                    cd minikube
                    kubectl apply -f deployment.yml 
                    kubectl apply -f service.yml 
                    """
                    sleep(time: 10, unit: "SECONDS")  // Wait for resources to be applied
                }
            }
        }

        stage('Get App URL') {
            steps {
                script {
                    // Get the service URL from Minikube
                    def serviceURL = sh(script: 'minikube service morocco-service --url', returnStdout: true).trim()

                    // Print the service URL
                    echo "The application is accessible at: ${serviceURL}"
                }
            }
        }
    }
}
